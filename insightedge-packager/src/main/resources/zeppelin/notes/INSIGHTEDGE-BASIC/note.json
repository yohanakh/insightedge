{
  "paragraphs": [
    {
      "text": "%md\n> If you see 'Interpreter binding' above, just hit `Save` without deselecting any interpreters.\n\n## Welcome to InsightEdge tutorial.\n\n##### This tutorial shows some of basic features of InsightEdge:\n* saving RDDs\n* loading RDDs\n* loading RDDs via SQL queries\n* loading DataFrames\n* querying tables created with DataFrames\n* persisting DataFrames to Data Grid\n\n##### This is a live tutorial, you can run the code yourself. _(click `Run` button in each paragraph from top to bottom)_",
      "dateUpdated": "2017-06-20T09:42:33+0300",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<blockquote>\n  <p>If you see &lsquo;Interpreter binding&rsquo; above, just hit <code>Save</code> without deselecting any interpreters.</p>\n</blockquote>\n<h2>Welcome to InsightEdge tutorial.</h2>\n<h5>This tutorial shows some of basic features of InsightEdge:</h5>\n<ul>\n  <li>saving RDDs</li>\n  <li>loading RDDs</li>\n  <li>loading RDDs via SQL queries</li>\n  <li>loading DataFrames</li>\n  <li>querying tables created with DataFrames</li>\n  <li>persisting DataFrames to Data Grid</li>\n</ul>\n<h5>This is a live tutorial, you can run the code yourself. <em>(click <code>Run</code> button in each paragraph from top to bottom)</em></h5>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1497940953964_119234876",
      "id": "20170620-093024_406952967",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:2846"
    },
    {
      "text": "%md\n## Defining data model.\n\n##### `%define` allows you to append custom code to spark jobs. This is a nice place to write your model classes. To learn about syntax, please, refer to [Data Modeling](http://insightedge.io/docs/010/2_modeling.html).\n##### Two things to keep in mind when working with `%define`:\n1. you can only call `%define` before `%spark` interpreter, thus changing model requires reloading the interpreter\n    - code in `%define` is compiled and packed into temporary jars\n    - these jars are added as dependencies to spark jobs\n2. each model change must be supplied with new version because Data Grid won't allow overwriting model schema\n    - put `v#` as a subpackage for data model (e.g. `package model.v1`)\n    - increment `v#` each time you make a change and update `import model.v#._` statement",
      "dateUpdated": "2017-06-20T09:42:33+0300",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Defining data model.</h2>\n<h5><code>%define</code> allows you to append custom code to spark jobs. This is a nice place to write your model classes. To learn about syntax, please, refer to <a href=\"http://insightedge.io/docs/010/2_modeling.html\">Data Modeling</a>.</h5>\n<h5>Two things to keep in mind when working with <code>%define</code>:</h5>\n<ol>\n  <li>you can only call <code>%define</code> before <code>%spark</code> interpreter, thus changing model requires reloading the interpreter\n    <ul>\n      <li>code in <code>%define</code> is compiled and packed into temporary jars</li>\n      <li>these jars are added as dependencies to spark jobs</li>\n    </ul>\n  </li>\n  <li>each model change must be supplied with new version because Data Grid won&rsquo;t allow overwriting model schema\n    <ul>\n      <li>put <code>v#</code> as a subpackage for data model (e.g. <code>package model.v1</code>)</li>\n      <li>increment <code>v#</code> each time you make a change and update <code>import model.v#._</code> statement</li>\n    </ul>\n  </li>\n</ol>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1497940953964_119234876",
      "id": "20170620-093134_1087314216",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2847"
    },
    {
      "title": "Product model",
      "text": "%define\npackage model.v1\n\nimport org.insightedge.scala.annotation._\nimport scala.beans.{BeanProperty, BooleanBeanProperty}\n\ncase class Product(\n\n                    @BeanProperty\n                    @SpaceId\n                    var id: Long,\n\n                    @BeanProperty\n                    var description: String,\n\n                    @BeanProperty\n                    var quantity: Int,\n\n                    @BooleanBeanProperty\n                    var featuredProduct: Boolean\n\n                  ) {\n\n  def this() = this(-1, null, -1, false)\n\n}",
      "dateUpdated": "2017-06-20T09:42:33+0300",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497940953965_118850127",
      "id": "20170620-093154_1933571106",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2848"
    },
    {
      "title": "Importing Model",
      "text": "%spark\nimport model.v1._\n",
      "dateUpdated": "2017-06-20T09:42:33+0300",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497940953965_118850127",
      "id": "20170620-093235_1886252813",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2849"
    },
    {
      "title": "Saving RDD",
      "text": "%spark\nimport scala.util.Random\n\ndef normal(top:Int): Int = {\n    val iterations = 10\n    val normal = (0 to iterations).foldLeft(0.0){(sum, index) => sum + Math.random()} / iterations\n    (normal * top).toInt\n}\n\nval rdd = sc.parallelize(1 to 100000).map { i => Product(i, \"Description of product \" + i, Math.abs(normal(100) - 30), Random.nextDouble() < 0.2) }\nrdd.saveToGrid()\n",
      "dateUpdated": "2017-06-20T09:42:33+0300",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497940953965_118850127",
      "id": "20170620-093337_2060899833",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2850"
    },
    {
      "title": "Loading RDD",
      "text": "%spark\nval plainRdd = sc.gridRdd[Product]()\nval count = plainRdd.count()\n",
      "dateUpdated": "2017-06-20T09:42:33+0300",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 4,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497940953965_118850127",
      "id": "20170620-093424_256644097",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2851"
    },
    {
      "title": "Loading RDD with SQL",
      "text": "%spark\nval sqlRdd = sc.gridSql[Product](\"quantity < ?\", Seq(5))\nval count = sqlRdd.count()\n",
      "dateUpdated": "2017-06-20T09:42:50+0300",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 4,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497940953966_120004374",
      "id": "20170620-093458_2093934595",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2852"
    },
    {
      "title": "Loading DataFrame",
      "text": "%spark\nval df = spark.read.grid.loadDF[Product]\ndf.printSchema()\ndf.createOrReplaceTempView(\"product\")\nval lowStock = df.filter(df(\"quantity\") < 5).count()\n",
      "dateUpdated": "2017-06-20T09:55:20+0300",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 4,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497940953966_120004374",
      "id": "20170620-093540_604441252",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2853"
    },
    {
      "text": "%md\n#### After executing `df.createOrReplaceTempView(\"product\")`, you can run SQL queries on the `product` table to perform interactive analysis",
      "dateUpdated": "2017-06-20T09:42:33+0300",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h4>After executing <code>df.createOrReplaceTempView(&quot;product&quot;)</code>, you can run SQL queries on the <code>product</code> table to perform interactive analysis</h4>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1497940953966_120004374",
      "id": "20170620-093628_1219065086",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2854"
    },
    {
      "text": "%sql\nselect\n    (case when featuredProduct <> 0 then 'featured' ELSE 'not-featured' END) as featured,\n    count(featuredProduct) as count \nfrom product\ngroup by featuredProduct \norder by featuredProduct \n",
      "user": "anonymous",
      "dateUpdated": "2017-06-20T09:51:14+0300",
      "config": {
        "colWidth": 6,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300,
              "optionOpen": false
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497941414243_-1909715761",
      "id": "20170620-095014_288553858",
      "dateCreated": "2017-06-20T09:50:14+0300",
      "status": "READY",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:3646",
      "title": "Number of featured/usual products"
    },
    {
      "text": "%sql\nselect quantity, count(quantity) as count \nfrom product \nwhere featuredProduct = ${featured=true,true|false}\ngroup by quantity \norder by quantity \n",
      "user": "anonymous",
      "dateUpdated": "2017-06-20T09:54:13+0300",
      "config": {
        "colWidth": 6,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300,
              "optionOpen": false
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497941479267_451411618",
      "id": "20170620-095119_566430160",
      "dateCreated": "2017-06-20T09:51:19+0300",
      "status": "READY",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:3729",
      "title": "Number of products by quantity"
    },
    {
      "text": "%md\n#### `DataFrames` can be persisted to Data Grid and then loaded back. This allows you to share processed data between applications\n",
      "user": "anonymous",
      "dateUpdated": "2017-06-20T09:54:29+0300",
      "config": {
        "colWidth": 12,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497941658976_2101877131",
      "id": "20170620-095418_1849917370",
      "dateCreated": "2017-06-20T09:54:18+0300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:3798",
      "dateFinished": "2017-06-20T09:54:29+0300",
      "dateStarted": "2017-06-20T09:54:29+0300",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h4><code>DataFrames</code> can be persisted to Data Grid and then loaded back. This allows you to share processed data between applications</h4>\n</div>"
          }
        ]
      }
    },
    {
      "text": "%spark\nimport org.apache.spark.sql._",
      "user": "anonymous",
      "dateUpdated": "2017-06-20T09:54:58+0300",
      "config": {
        "colWidth": 12,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497941682959_500349705",
      "id": "20170620-095442_1227966258",
      "dateCreated": "2017-06-20T09:54:42+0300",
      "status": "READY",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:3879",
      "title": "Importing Spark SQL classes"
    },
    {
      "title": "Loading Class As DataFrame (simpler syntax)",
      "text": "%spark\nval df = spark.read.grid.loadDF[Product]\n",
      "dateUpdated": "2017-06-20T09:55:54+0300",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 4,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497940953966_120004374",
      "id": "20170620-093634_46944201",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2855"
    },
    {
      "title": "Saving DataFrame as collection (simpler syntax)",
      "text": "%spark\ndf.select(\"id\", \"quantity\").filter(df(\"quantity\") < 5)\n    .write.grid.mode(SaveMode.Overwrite).save(\"smallStock\")\n",
      "dateUpdated": "2017-06-20T09:42:33+0300",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 4,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497940953966_120004374",
      "id": "20170620-093742_927375323",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2856"
    },
    {
      "title": "Loading Collection as DataFrame (simpler syntax)",
      "text": "%spark\nval df = spark.read.grid.load(\"smallStock\")\n\nval outOfStock = df.filter(df(\"quantity\") equalTo 0).count()\n",
      "dateUpdated": "2017-06-20T09:55:44+0300",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 4,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1497940953966_120004374",
      "id": "20170620-093814_941295066",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2857"
    },
    {
      "text": "%md\n## Congratulations, it's done.\n##### You can create your own notebook in 'Notebook' menu. Good luck!\n",
      "dateUpdated": "2017-06-20T09:42:33+0300",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Congratulations, it&rsquo;s done.</h2>\n<h5>You can create your own notebook in &lsquo;Notebook&rsquo; menu. Good luck!</h5>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1497940953967_119619625",
      "id": "20170620-093845_67106827",
      "dateCreated": "2017-06-20T09:42:33+0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2858"
    }
  ],
  "name": "InsightEdge Basics",
  "id": "INSIGHTEDGE-BASIC",
  "angularObjects": {
    "2CKP7X6T5:shared_process": [],
    "2CN28R7JH:shared_process": []
  },
  "config": {
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}